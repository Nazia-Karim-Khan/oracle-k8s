Install cert-manager:
kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.14.4/cert-manager.yaml

kubectl apply -f rbac/cluster-role-binding.yaml

kubectl apply -f oracle-database-operator.yaml

kubectl apply -f rbac/node-rbac.yaml

Generate Secret:
kubectl create secret generic db-admin-secret --from-literal=oracle_pwd=MyameisNazia1# -n oracle-sidb

Log into Oracle Container Registry and accept the license agreement for the Database image; then generate auth token:
kubectl create secret docker-registry oracle-container-registry-secret --docker-server=container-registry.oracle.com --docker-username='nazia.karim@brainstation-23.com' --docker-password='e+_wjIoet#i83kA4mF9' --docker-email='nazia.karim@brainstation-23.com' -n oracle-sidb

Create storage class:
kubectl apply -f storage-class.yaml 

Create single instance database:
kubectl apply -f singleinstancedatabase_create.yaml

Chech status:
kubectl get singleinstancedatabase sidb-sample -o "jsonpath={.status.status}" -n oracle-sidb 

Install sqlplus:
https://www.geeksforgeeks.org/how-to-install-sqlplus-on-linux/

Connect to database:
kubectl get singleinstancedatabase sidb-sample -o "jsonpath={.status.connectString}" -n oracle-sidb
sqlplus sys/MyameisNazia1#@<connection_string>>/ORCL1 as sysdba

CREATE TABLE employees (
    emp_id NUMBER PRIMARY KEY,
    emp_name VARCHAR2(100),
    emp_salary NUMBER(10, 2),
    hire_date DATE
);

INSERT INTO employees (emp_id, emp_name, emp_salary, hire_date) 
VALUES (1, 'John Doe', 55000, TO_DATE('2020-06-15', 'YYYY-MM-DD'));

INSERT INTO employees (emp_id, emp_name, emp_salary, hire_date) 
VALUES (2, 'Jane Smith', 60000, TO_DATE('2019-05-10', 'YYYY-MM-DD'));

INSERT INTO employees (emp_id, emp_name, emp_salary, hire_date) 
VALUES (3, 'Alice Johnson', 52000, TO_DATE('2021-08-25', 'YYYY-MM-DD'));

INSERT INTO employees (emp_id, emp_name, emp_salary, hire_date) 
VALUES (4, 'Bob Brown', 58000, TO_DATE('2018-11-05', 'YYYY-MM-DD'));

INSERT INTO employees (emp_id, emp_name, emp_salary, hire_date) 
VALUES (5, 'Charlie Davis', 62000, TO_DATE('2022-03-12', 'YYYY-MM-DD'));

SELECT * FROM employees;

commit


Update Reclaim Policy If Needed:
kubectl patch pv pvc-a4ac2535-3782-4968-81a3-1a98407c12c6 -p '{"spec":{"persistentVolumeReclaimPolicy":"Retain"}}'


Clone a Database: 
kubectl apply -f singleinstancedatabase_clone.yaml




CREATE BACKUP:

mkdir -p /opt/oracle/backup/
chmod 777 /opt/oracle/backup/
rman target /

BACKUP DATABASE PLUS ARCHIVELOG;

BACKUP CURRENT CONTROLFILE FORMAT '/opt/oracle/backup/controlfile.bkp';

ls -lh /opt/oracle/backup/ 

kubectl cp sidb-sample-19hhb:/opt/oracle/backup ~/local_backup -n oracle-sidb



RESTORE AND RECOVER:
kubectl cp ~/local_backup sidb-sample-zaouh:/opt/oracle/backup -n oracle-sidb


bash-4.2$ ls -lh /opt/oracle/backup/   
total 3.3G
-rw-r--r--. 1 oracle oinstall  61M Feb  5 06:25 033gurd1_1_1
-rw-r--r--. 1 oracle oinstall 5.5M Feb  5 06:25 043gurd3_1_1
-rw-r--r--. 1 oracle oinstall 472M Feb  5 06:26 053gurda_1_1
-rw-r--r--. 1 oracle oinstall 555M Feb  5 06:27 063gurde_1_1
-rw-r--r--. 1 oracle oinstall  19K Feb  5 06:27 073gure9_1_1
-rw-r--r--. 1 oracle oinstall  61M Feb  5 06:27 093gureg_1_1
-rw-r--r--. 1 oracle oinstall 1.2G Feb  5 06:30 0a3gurej_1_1
-rw-r--r--. 1 oracle oinstall 472M Feb  5 06:31 0b3gurf3_1_1
-rw-r--r--. 1 oracle oinstall 555M Feb  5 06:32 0c3gurfi_1_1
-rw-r--r--. 1 oracle oinstall 8.0K Feb  5 06:32 0d3gurfq_1_1
-rw-r--r--. 1 oracle oinstall  18M Feb  5 06:32 controlfile.bkp

sqlplus / as sysdba

SELECT STATUS FROM V$INSTANCE;

If Open, 
SHUTDOWN IMMEDIATE;
STARTUP NOMOUNT;


rman target /


RMAN> RESTORE CONTROLFILE FROM '/opt/oracle/backup/controlfile.bkp';

RMAN> ALTER DATABASE MOUNT;


RMAN> CATALOG START WITH '/opt/oracle/backup/';

RMAN> LIST BACKUP;

RMAN> RESTORE DATABASE;

RMAN> RECOVER DATABASE;

Starting recover at 05-FEB-25
allocated channel: ORA_DISK_1
channel ORA_DISK_1: SID=2 device type=DISK

starting media recovery

archived log for thread 1 with sequence 0 is already on disk as file /opt/oracle/oradata/ORCL1/redo02.log
channel ORA_DISK_1: starting archived log restore to default destination
channel ORA_DISK_1: restoring archived log
archived log thread=1 sequence=11
channel ORA_DISK_1: reading from backup piece /opt/oracle/backup/0d3gurfq_1_1
channel ORA_DISK_1: piece handle=/opt/oracle/backup/0d3gurfq_1_1 tag=TAG20250204T125210
channel ORA_DISK_1: restored backup piece 1
channel ORA_DISK_1: restore complete, elapsed time: 00:00:01
archived log file name=/opt/oracle/oradata/fast_recovery_area/ORCL1/archivelog/2025_02_05/o1_mf_1_11_mt629xns_.arc thread=1 sequence=11
channel default: deleting archived log(s)
archived log file name=/opt/oracle/oradata/fast_recovery_area/ORCL1/archivelog/2025_02_05/o1_mf_1_11_mt629xns_.arc RECID=9 STAMP=1192257981
unable to find archived log
archived log thread=1 sequence=12
RMAN-00571: ===========================================================
RMAN-00569: =============== ERROR MESSAGE STACK FOLLOWS ===============
RMAN-00571: ===========================================================
RMAN-03002: failure of recover command at 02/05/2025 06:46:23
RMAN-06054: media recovery requesting unknown archived log for thread 1 with sequence 12 and starting SCN of 2164260

In case of error as shown above:

RMAN> RECOVER DATABASE UNTIL SCN 2164260;

RMAN> ALTER DATABASE OPEN RESETLOGS;

Statement processed

RMAN> SELECT status FROM v$instance;

STATUS      
------------
OPEN        

RMAN> exit

sqlplus / as sysdba

SQL> select * from employees;


Ref: https://github.com/oracle/oracle-database-operator, https://github.com/oracle/oracle-database-operator/blob/main/docs/sidb/README.md#singleinstancedatabase-resource
